{"version":3,"sources":["../../../src/AmazonApi/auth/SignHelper.js"],"names":["crypto","require","exports","createAuthorizationHeader","accessKey","secretKey","requestHeaders","httpMethod","path","payload","region","service","timestamp","signedHeaders","createSignedHeaders","canonicalRequest","createCanonicalRequest","stringToSign","createStringToSign","signature","createSignature","authorizationHeader","createAuthorizationHeaders","createCredentialScope","method","pathname","query","headers","payloadJson","JSON","stringify","toUpperCase","createCanonicalQueryString","createCanonicalHeaders","hexEncodedHash","String","join","params","Object","keys","sort","map","key","encodeURIComponent","name","toLowerCase","trim","toString","time","toDate","request","toTime","secret","h1","hmac","h2","h3","h4","enc","Hex","toAmzDate","Date","toISOString","replace","substring","data","HmacSHA256","SHA256"],"mappings":"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","sourcesContent":["/**\n * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n\n/**\n * ProductAdvertisingAPI\n * https://webservices.amazon.com/paapi5/documentation/index.html\n *\n * This file is for signing PAAPI request with AWS V4 Signing. For more details, see\n * https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\n *\n * Do not edit the class manually.\n *\n */\n\n'use strict';\n\n// sources of inspiration:\n// http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\n\nvar crypto = require('crypto-js');\n\nexports.createAuthorizationHeader = function(\n  accessKey,\n  secretKey,\n  requestHeaders,\n  httpMethod,\n  path,\n  payload,\n  region,\n  service,\n  timestamp\n) {\n  /* Step 1: Create Signed Headers */\n  var signedHeaders = exports.createSignedHeaders(requestHeaders);\n\n  /* Step 2: Create Canonical Request */\n  var canonicalRequest = exports.createCanonicalRequest(httpMethod, path, {}, requestHeaders, payload);\n\n  /* Step 3: Create String To Sign */\n  var stringToSign = exports.createStringToSign(timestamp, region, service, canonicalRequest);\n\n  /* Step 4: Create Signature Headers */\n  var signature = exports.createSignature(secretKey, timestamp, region, service, stringToSign);\n\n  /* Step 5: Create Authorization Header */\n  var authorizationHeader = exports.createAuthorizationHeaders(\n    timestamp,\n    accessKey,\n    region,\n    service,\n    signedHeaders,\n    signature\n  );\n\n  return authorizationHeader;\n};\n\nexports.createAuthorizationHeaders = function(timestamp, accessKey, region, service, signedHeaders, signature) {\n  return (\n    'AWS4-HMAC-SHA256' +\n    ' ' +\n    'Credential=' +\n    accessKey +\n    '/' +\n    exports.createCredentialScope(timestamp, region, service) +\n    ', ' +\n    'SignedHeaders=' +\n    signedHeaders +\n    ', ' +\n    'Signature=' +\n    signature\n  );\n};\n\nexports.createCanonicalRequest = function(method, pathname, query, headers, payload) {\n  var payloadJson = JSON.stringify(payload);\n  return [\n    method.toUpperCase(),\n    pathname,\n    exports.createCanonicalQueryString(query),\n    exports.createCanonicalHeaders(headers),\n    exports.createSignedHeaders(headers),\n    hexEncodedHash(String(payloadJson))\n  ].join('\\n');\n};\n\nexports.createCanonicalQueryString = function(params) {\n  return Object.keys(params)\n    .sort()\n    .map(function(key) {\n      return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n    })\n    .join('&');\n};\n\nexports.createCanonicalHeaders = function(headers) {\n  return Object.keys(headers)\n    .sort()\n    .map(function(name) {\n      return name.toLowerCase().trim() + ':' + headers[name].toString().trim() + '\\n';\n    })\n    .join('');\n};\n\nexports.createSignedHeaders = function(headers) {\n  return Object.keys(headers)\n    .sort()\n    .map(function(name) {\n      return name.toLowerCase().trim();\n    })\n    .join(';');\n};\n\nexports.createCredentialScope = function(time, region, service) {\n  return [toDate(time), region, service, 'aws4_request'].join('/');\n};\n\nexports.createStringToSign = function(time, region, service, request) {\n  return [\n    'AWS4-HMAC-SHA256',\n    toTime(time),\n    exports.createCredentialScope(time, region, service),\n    hexEncodedHash(request)\n  ].join('\\n');\n};\n\nexports.createSignature = function(secret, time, region, service, stringToSign) {\n  var h1 = hmac('AWS4' + secret, toDate(time)); // date-key\n  var h2 = hmac(h1, region); // region-key\n  var h3 = hmac(h2, service); // service-key\n  var h4 = hmac(h3, 'aws4_request'); // signing-key\n  return hmac(h4, stringToSign).toString(crypto.enc.Hex);\n};\n\nexports.toAmzDate = function(time) {\n  return new Date(time).toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n};\n\nfunction toTime(time) {\n  return new Date(time).toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n}\n\nfunction toDate(time) {\n  return toTime(time).substring(0, 8);\n}\n\nfunction hmac(key, data) {\n  return crypto.HmacSHA256(data, key);\n}\n\nfunction hexEncodedHash(data) {\n  return crypto.SHA256(data).toString(crypto.enc.Hex);\n}\n"],"file":"SignHelper.js"}