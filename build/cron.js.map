{"version":3,"sources":["../src/cron.js"],"names":["cron","require","Keyboard","Key","Telegram","telegram","process","env","BOT_TOKEN","Cron","ctx","user","callbackQuery","message","chat","id","sendMessage","initializeCron","console","log","schedule","listSearches","testSearches","keyboard","make","inline","then","res","forEach","item","Object","keys","userId","length"],"mappings":";;;;;;;;;;AAAA;;;;;;;;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAAlB;;eAC0BA,OAAO,CAAC,mBAAD,C;IAAzBC,Q,YAAAA,Q;IAAUC,G,YAAAA,G;;AAClB,IAAMC,QAAQ,GAAGH,OAAO,CAAC,mBAAD,CAAxB;;AACA,IAAMI,QAAQ,GAAG,IAAID,QAAJ,CAAaE,OAAO,CAACC,GAAR,CAAYC,SAAzB,CAAjB;;IAEaC,I;AAET,gBAAYC,GAAZ,EAAiB;AAAA;;AACb,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKC,IAAL,GAAYD,GAAG,CAACE,aAAJ,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+BC,EAA3C;AACH;;;;iCAEY;AACT,WAAKL,GAAL,CAASL,QAAT,CAAkBW,WAAlB,CAA8B,KAAKL,IAAnC;AAEH;;;;;;;;AAGE,SAASM,cAAT,GAA0B;AAE7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEAnB,EAAAA,IAAI,CAACoB,QAAL,CAAc,WAAd,EAA2B,YAAM;AAC7B,+BAAYf,QAAZ;AACH,GAFD;AAGAL,EAAAA,IAAI,CAACoB,QAAL,CAAc,YAAd,EAA4B,YAAM;AAC9BC,IAAAA,YAAY;AACf,GAFD;AAGH;;AAEM,SAASC,YAAT,GAAwB;AAC3BD,EAAAA,YAAY;AACf;;AAEM,SAASA,YAAT,GAAwB;AAC3B,MAAME,QAAQ,GAAGrB,QAAQ,CAACsB,IAAT,CAAc,CAC3B,CAAC,uBAAD,EAA0B,sBAA1B,CAD2B,CAAd,EAEdC,MAFc,EAAjB;AAIA,mCAAkBC,IAAlB,CAAuB,UAAAC,GAAG,EAAI;AAC1BA,IAAAA,GAAG,CAACC,OAAJ,CAAY,UAAAC,IAAI,EAAI;AAChBC,MAAAA,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBD,OAAlB,CAA0B,UAAAI,MAAM,EAAI;AAChC3B,QAAAA,QAAQ,CAACW,WAAT,CAAqBgB,MAArB,2BAA8CH,IAAI,CAACG,MAAD,CAAJ,CAAaC,MAA3D,oBAA2EJ,IAAI,CAACG,MAAD,CAAJ,CAAaC,MAAb,GAAsB,CAAtB,GAA0B,IAA1B,GAAiC,GAA5G,mBAAwHJ,IAAI,CAACG,MAAD,CAAJ,CAAaC,MAAb,GAAsB,CAAtB,GAA0B,GAA1B,GAAgC,GAAxJ,2CAA4LJ,IAAI,CAACG,MAAD,CAAJ,CAAaC,MAAb,GAAsB,CAAtB,GAA0B,GAA1B,GAAgC,GAA5N,QAAoOV,QAApO;AACH,OAFD;AAGH,KAJD;AAKH,GAND;AAQH;;AAEDN,cAAc","sourcesContent":["import { getSearches, getListSearches } from './firebase';\nvar cron = require('node-cron');\nconst { Keyboard, Key } = require('telegram-keyboard')\nconst Telegram = require('telegraf/telegram')\nconst telegram = new Telegram(process.env.BOT_TOKEN)\n \nexport class Cron {\n    \n    constructor(ctx) {\n        this.ctx = ctx\n        this.user = ctx.callbackQuery.message.chat.id\n    }\n\n    initialize() {\n        this.ctx.telegram.sendMessage(this.user, `Riceverai un messaggio ogni giorno alle 6 di mattina`)\n        \n    }\n}\n\nexport function initializeCron() {\n\n    console.log(\"initializeCron\")\n\n    cron.schedule('0 7 * * *', () => {\n        getSearches(telegram)\n    })\n    cron.schedule('0 15 * * *', () => {\n        listSearches()\n    })\n}\n\nexport function testSearches() {\n    listSearches()\n}\n\nexport function listSearches() {\n    const keyboard = Keyboard.make([\n        ['Continua a Monitorare', 'Smetti di Monitorare'],\n    ]).inline()\n\n    getListSearches().then(res => {\n        res.forEach(item => {\n            Object.keys(item).forEach(userId => {\n                telegram.sendMessage(userId,`Al momento hai ${item[userId].length} ricerc${item[userId].length > 1 ? 'he' : 'a'} attiv${item[userId].length > 1 ? 'e' : 'a'}, vuoi continuare a monitorarl${item[userId].length > 1 ? 'e' : 'a'}?`, keyboard)\n            })\n        })\n    })\n\n}\n\ninitializeCron()"],"file":"cron.js"}